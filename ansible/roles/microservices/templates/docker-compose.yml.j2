version: '3.8'

services:
  api-gateway:
    image: {{ ecr_registry }}/api-gateway:{{ image_tag | default('latest') }}
    container_name: api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
      - ORDER_SERVICE_URL=http://order-service:3003
    depends_on:
      - auth-service
      - product-service
      - order-service
    networks:
      - microservices-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  auth-service:
    image: {{ ecr_registry }}/auth-service:{{ image_tag | default('latest') }}
    container_name: auth-service
    ports:
      - "3001:3001"
    environment:
      - FLASK_ENV=production
      - PORT=3001
      - JWT_SECRET={{ jwt_secret }}
      - TOKEN_EXPIRATION_HOURS=24
    networks:
      - microservices-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  product-service:
    image: {{ ecr_registry }}/product-service:{{ image_tag | default('latest') }}
    container_name: product-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
    networks:
      - microservices-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  order-service:
    image: {{ ecr_registry }}/order-service:{{ image_tag | default('latest') }}
    container_name: order-service
    ports:
      - "3003:3003"
    environment:
      - FLASK_ENV=production
      - PORT=3003
      - PRODUCT_SERVICE_URL=http://product-service:3002
    depends_on:
      - product-service
    networks:
      - microservices-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  microservices-network:
    driver: bridge
    name: microservices-network
