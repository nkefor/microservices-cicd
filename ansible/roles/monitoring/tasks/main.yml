---
# Monitoring role - Set up CloudWatch agent and logging

- name: Download CloudWatch agent
  get_url:
    url: https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb
    dest: /tmp/amazon-cloudwatch-agent.deb
    mode: '0644'

- name: Install CloudWatch agent
  apt:
    deb: /tmp/amazon-cloudwatch-agent.deb
    state: present

- name: Create CloudWatch agent configuration
  copy:
    content: |
      {
        "agent": {
          "metrics_collection_interval": 60,
          "run_as_user": "cwagent"
        },
        "logs": {
          "logs_collected": {
            "files": {
              "collect_list": [
                {
                  "file_path": "/opt/microservices/logs/*.log",
                  "log_group_name": "/microservices/${ENVIRONMENT}",
                  "log_stream_name": "{instance_id}/application",
                  "retention_in_days": 7
                },
                {
                  "file_path": "/var/log/syslog",
                  "log_group_name": "/microservices/${ENVIRONMENT}",
                  "log_stream_name": "{instance_id}/syslog"
                }
              ]
            }
          }
        },
        "metrics": {
          "namespace": "Microservices",
          "metrics_collected": {
            "cpu": {
              "measurement": [
                {
                  "name": "cpu_usage_idle",
                  "rename": "CPU_IDLE",
                  "unit": "Percent"
                }
              ],
              "metrics_collection_interval": 60,
              "totalcpu": false
            },
            "disk": {
              "measurement": [
                {
                  "name": "used_percent",
                  "rename": "DISK_USED",
                  "unit": "Percent"
                }
              ],
              "metrics_collection_interval": 60,
              "resources": [
                "*"
              ]
            },
            "diskio": {
              "measurement": [
                {
                  "name": "io_time"
                }
              ],
              "metrics_collection_interval": 60,
              "resources": [
                "*"
              ]
            },
            "mem": {
              "measurement": [
                {
                  "name": "mem_used_percent",
                  "rename": "MEM_USED",
                  "unit": "Percent"
                }
              ],
              "metrics_collection_interval": 60
            },
            "netstat": {
              "measurement": [
                {
                  "name": "tcp_established",
                  "rename": "TCP_CONNECTIONS",
                  "unit": "Count"
                }
              ],
              "metrics_collection_interval": 60
            }
          }
        }
      }
    dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
    mode: '0644'

- name: Start CloudWatch agent
  systemd:
    name: amazon-cloudwatch-agent
    state: started
    enabled: yes

- name: Install monitoring scripts
  copy:
    content: |
      #!/bin/bash
      # Health check script for all services

      SERVICES=("api-gateway:3000" "auth-service:3001" "product-service:3002" "order-service:3003")

      for service in "${SERVICES[@]}"; do
          IFS=':' read -r name port <<< "$service"
          if curl -sf http://localhost:$port/health > /dev/null 2>&1; then
              echo "$name is healthy"
          else
              echo "$name is unhealthy"
              exit 1
          fi
      done

      echo "All services are healthy"
    dest: /opt/microservices/health-check.sh
    mode: '0755'

- name: Create cron job for health checks
  cron:
    name: "Microservices health check"
    minute: "*/5"
    job: "/opt/microservices/health-check.sh >> /opt/microservices/logs/health-check.log 2>&1"
